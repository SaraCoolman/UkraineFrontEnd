{"version":3,"sources":["http-common.js","services/lodge.service.js","components/lodge-list.component.js","components/add-lodge.component.js","components/lodge.component.js","services/people.service.js","components/person.component.js","components/add-person.component.js","components/person-list.componten.js","App.js","serviceWorker.js","index.js"],"names":["axios","get","create","baseURL","process","REACT_APP_API_BASE_URL","headers","Content-type","lodge_service","http","id","concat","data","post","put","delete","name","region","console","log","LodgeList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeSearchRegion","bind","assertThisInitialized","retrieveLodges","refreshList","setActiveLodge","removeAllLodges","searchRegion","state","lodges","currentLodge","currentIndex","searchName","e","target","value","setState","_this2","LodgeDataService","getAll","then","response","catch","lodge","index","_this3","deleteAll","_this4","findByName","_this5","_this$state","react_default","a","createElement","className","placeholder","onChange","type","onClick","map","key","window","confirm","nrOfBeds","nrOfPersons","freeBeds","react_router_dom","to","Component","AddLodge","onChangeName","onChangeNrOfBeds","onChangeType","onChangeRegion","saveLodge","newLodge","submitted","method","action","htmlFor","required","Lodge","onChangeNrOfPersons","onChangeFreeBeds","getLodge","updateLodge","deleteLodge","message","match","params","prevState","objectSpread","FreeBeds","update","history","push","people_service","Person","onChangeAge","onChangeAssignedLodge","getPerson","updatePerson","deletePerson","currentPerson","age","assignedLodge","currentAssignedLodge","PeopleDataService","AddPerson","savePerson","newPerson","PersonList","onChangeSearchPName","retrievePerson","setActivePerson","removeAllPerson","searchPName","person","PersonDataService","App","react_router","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d9f738fa.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.get('http://localhost:8081')\r\n\r\nexport default axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL || 'https://ukraine-api.herokuapp.com',\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\n\r\n\r\nclass LodgeDataService {\r\n\r\n    getAll() {\r\n      \r\n    return http.get(\"/lodges\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/lodges/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/lodges\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/lodges/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/lodges/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/lodges`);\r\n  }\r\n\r\n  findByName(name) {\r\n    return http.get(`/lodges?region=${name}`);\r\n  }\r\n\r\n  findByRegion(region) {\r\n    console.log(\"infindregion\");\r\n    console.log(region);\r\n    console.log(http.get(`/lodges?region`));\r\n    return http.get(`/lodges?region=${region}`);\r\n  }\r\n}\r\n\r\nexport default new LodgeDataService();","import React, { Component } from \"react\";\r\nimport LodgeDataService from \"../services/lodge.service\";\r\nimport { Link } from \"react-router-dom\";\r\n//import Lodge from \"./ldoge.component\";\r\n\r\nexport default class LodgeList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchRegion = this.onChangeSearchRegion.bind(this);\r\n    this.retrieveLodges = this.retrieveLodges.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveLodge = this.setActiveLodge.bind(this);\r\n    this.removeAllLodges = this.removeAllLodges.bind(this);\r\n    this.searchRegion = this.searchRegion.bind(this);\r\n\r\n    this.state = {\r\n      lodges: [],\r\n      currentLodge: null,\r\n      currentIndex: -1,\r\n      searchName: \"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.retrieveLodges();\r\n  }\r\n\r\n  onChangeSearchRegion(e) {\r\n    const searchName = e.target.value;\r\n\r\n    this.setState({\r\n      searchName: searchName\r\n    });\r\n  }\r\n\r\n  retrieveLodges() {\r\n    LodgeDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          lodges: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveLodges();\r\n    this.setState({\r\n      currentLodge: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveLodge(lodge, index) {\r\n    this.setState({\r\n      currentLodge: lodge,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  removeAllLodges() {\r\n    LodgeDataService.deleteAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  searchRegion() {\r\n    this.setState({\r\n      currentLodge: null,\r\n      currentIndex: -1\r\n    });\r\n\r\n    LodgeDataService.findByName(this.state.searchName)\r\n      .then(response => {\r\n        this.setState({\r\n          lodges: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n      const { searchName, lodges, currentLodge, currentIndex } = this.state;\r\n\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <select\r\n            className=\"form-control\"\r\n            placeholder=\"Suche nach Region\"\r\n            value={searchName}\r\n            onChange={this.onChangeSearchRegion}\r\n            >\r\n              <option value=\"\"> </option>\r\n              <option value=\"Wien\">Wien</option>\r\n                    <option value=\"Niederösterreich\">Niederösterreich</option>\r\n                    <option value=\"Burgenland\">Burgenland</option>\r\n                    <option value=\"Oberösterreich\">Oberösterreich</option>\r\n                    <option value=\"Salzburg\">Salzburg</option>\r\n                    <option value=\"Steiermark\">Steiermark</option>\r\n                    <option value=\"Kärnten\">Kärnten</option>\r\n                    <option value=\"Tirol\">Tirol</option>\r\n                    <option value=\"Vorarlberg\">Vorarlberg</option>\r\n\r\n            </select>\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.searchRegion}\r\n              >\r\n                Suchen\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Unterk&uuml;nfte</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {lodges &&\r\n              lodges.map((lodge, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveLodge(lodge, index)}\r\n                  key={index}\r\n                >\r\n                  {lodge.name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            className=\"m-3 btn btn-sm btn-danger\"\r\n            onClick={() => {if (window.confirm(\"Sollen die Daten gelöscht werden\"))  this.removeAllLodges()}}\r\n          >\r\n            Alle l&ouml;schen\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentLodge ? (\r\n            <div>\r\n              <h4>Unterkunft</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Name:</strong>\r\n                </label>{\" \"}\r\n                   {currentLodge.name}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Anzahl Betten:</strong>\r\n                </label>{\" \"}\r\n                {currentLodge.nrOfBeds}\r\n               </div>\r\n               <div>\r\n               <label>\r\n                <strong>Anzahl Personen:</strong>\r\n                   </label>{\" \"}\r\n                  {currentLodge.nrOfPersons}\r\n                 </div>\r\n                <div>\r\n                   <label>\r\n                       <strong>Freie Betten:</strong>\r\n                       </label>{\" \"}\r\n                   {currentLodge.freeBeds}\r\n                   </div>\r\n                   <div>\r\n                      <label>\r\n                      <strong>Art der Unterkunft:</strong>\r\n                        </label>{\" \"}\r\n                        {currentLodge.type}\r\n                    </div>\r\n                    <div>\r\n                       <label>\r\n                       <strong>Region:</strong>\r\n                       </label>{\" \"}\r\n                       {currentLodge.region}\r\n                    </div>\r\n              \r\n              <Link\r\n                to={\"/lodges/\" + currentLodge.id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Bearbeiten\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Klicken Sie auf eine Unterkunft...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport LodgeDataService from \"../services/lodge.service\";\r\n\r\nexport default class AddLodge extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n      this.onChangeNrOfBeds = this.onChangeNrOfBeds.bind(this);\r\n      //this.onChangeNrOfPersons = this.onChangeNrOfPersons.bind(this);\r\n     // this.onChangeFreeBeds = this.onChangeFreeBeds.bind(this);\r\n      this.onChangeType = this.onChangeType.bind(this);\r\n      this.onChangeRegion = this.onChangeRegion.bind(this);\r\n    this.saveLodge = this.saveLodge.bind(this);\r\n    this.newLodge = this.newLodge.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      nrOfBeds: null, \r\n      type: \"\",\r\n      region: \"\",\r\n\r\n       submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeNrOfBeds(e) {\r\n    this.setState({\r\n      nrOfBeds: e.target.value\r\n    });\r\n    }\r\n\r\n    /*onChangeNrOfPersons(e) {\r\n        this.setState({\r\n            nrOfPersons: e.target.value\r\n        });\r\n    }*/\r\n\r\n    /*onChangeFreeBeds(e) {\r\n        this.setState({\r\n            freeBeds: e.target.value\r\n        });\r\n    }*/\r\n\r\n    onChangeType(e) {\r\n        this.setState({\r\n            type: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeRegion(e) {\r\n        this.setState({\r\n            region: e.target.value\r\n        });\r\n    } \r\n\r\n  saveLodge() {\r\n    var data = {\r\n      name: this.state.name,\r\n      nrOfBeds: this.state.nrOfBeds,\r\n        nrOfPersons: this.state.nrOfPersons,\r\n        freeBeds: this.state.nrOfBeds,\r\n        type: this.state.type,\r\n      region: this.state.region\r\n    };\r\n\r\n    LodgeDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          nrOfBeds: response.data.nrOfBeds,\r\n            nrOfPersons: response.data.nrOfPersons,\r\n            freeBeds: response.data.nrOfBeds,\r\n            type: response.data.type,\r\n            region: response.data.region,\r\n\r\n            submitted: true\r\n\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n          console.log(e);\r\n\r\n      });\r\n  }\r\n\r\n  newLodge() {\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      nrOfBeds: null,\r\n      nrOfPersons: null,\r\n        freeBeds: this.onChangeNrOfBeds,\r\n        type: \"\",\r\n      region: \"\"\r\n\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>Die Unterkunft wurde erfolgreich übermittelt!</h4>\r\n            <form method=\"get\" action=\"/\">\r\n              <button className= \"btn btn-success\" type=\"submit\">Zurück zur Übersicht</button>\r\n            </form>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Name der Unterkunft</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"nrofBeds\">Anzahl der Betten</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"nrOfBeds\"\r\n                required\r\n                value={this.state.nrOfBeds}\r\n                onChange={this.onChangeNrOfBeds}\r\n                name=\"nrOfBeds\"\r\n              />\r\n            </div>\r\n\r\n              <div className=\"form-group\">\r\n               <label htmlFor=\"type\">Art der Unterkunft</label>\r\n                <input\r\n                 type=\"text\"\r\n                 className=\"form-control\"\r\n                  id=\"type\"\r\n                  required\r\n                  value={this.state.type}\r\n                  onChange={this.onChangeType}\r\n                  name=\"type\"\r\n                      />\r\n               </div>\r\n\r\n               <div className=\"form-group\">\r\n                <label htmlFor=\"region\">Region</label>\r\n                  <select id=\"region\" required \r\n                  className=\"form-control\"\r\n                  value={this.state.region}\r\n                  onChange={this.onChangeRegion}\r\n                  name=\"region\"\r\n                  >\r\n                    <option value=\"Wien\">Wien</option>\r\n                    <option value=\"Niederösterreich\">Niederösterreich</option>\r\n                    <option value=\"Burgenland\">Burgenland</option>\r\n                    <option value=\"Oberösterreich\">Oberösterreich</option>\r\n                    <option value=\"Salzburg\">Salzburg</option>\r\n                    <option value=\"Steiermark\">Steiermark</option>\r\n                    <option value=\"Kärnten\">Kärnten</option>\r\n                    <option value=\"Tirol\">Tirol</option>\r\n                    <option value=\"Vorarlberg\">Vorarlberg</option>\r\n                  </select>\r\n                 </div>\r\n            <button onClick={this.saveLodge} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport LodgeDataService from \"../services/lodge.service\";\r\n\r\nexport default class Lodge extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n     this.onChangeNrOfBeds = this.onChangeNrOfBeds.bind(this);\r\n      this.onChangeNrOfPersons = this.onChangeNrOfPersons.bind(this);\r\n     this.onChangeFreeBeds = this.onChangeFreeBeds.bind(this);\r\n      this.onChangeType = this.onChangeType.bind(this);\r\n      this.onChangeRegion = this.onChangeRegion.bind(this);\r\n    this.getLodge = this.getLodge.bind(this);\r\n    //this.updatePublished = this.updatePublished.bind(this);\r\n    this.updateLodge = this.updateLodge.bind(this);\r\n    this.deleteLodge= this.deleteLodge.bind(this);\r\n\r\n    this.state = {\r\n      currentLodge: {\r\n        id: null,\r\n        name: \"\",\r\n        nrOfBeds: null,\r\n        nrOfPersons: 0,\r\n        freeBeds: 0,\r\n        type: \"\",\r\n        region: \"\"\r\n\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLodge(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeName(e) {\r\n    const name = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentLodge: {\r\n          ...prevState.currentLodge,\r\n          name: name\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeNrOfBeds(e) {\r\n    const nrOfBeds = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentLodge: {\r\n        ...prevState.currentLodge,\r\n        nrOfBeds: nrOfBeds\r\n      }\r\n    }));\r\n    }\r\n\r\n\r\n    onChangeNrOfPersons(e) {\r\n        const nrOfPersons = e.target.value;\r\n\r\n        this.setState(prevState => ({\r\n            currentLodge: {\r\n                ...prevState.currentLodge,\r\n                nrOfPersons: nrOfPersons\r\n            }\r\n        }));\r\n    }\r\n\r\n    onChangeFreeBeds(e) {\r\n        const FreeBeds = e.target.value;\r\n\r\n        this.setState(prevState => ({\r\n            currentLodge: {\r\n                ...prevState.currentLodge,\r\n                FreeBeds: FreeBeds\r\n            }\r\n        }));\r\n    }\r\n\r\n    onChangeType(e) {\r\n        const type = e.target.value;\r\n\r\n        this.setState(prevState => ({\r\n            currentLodge: {\r\n                ...prevState.currentLodge,\r\n                type: type\r\n            }\r\n        }));\r\n    }\r\n\r\n\r\n    onChangeRegion(e) {\r\n        const region = e.target.value;\r\n\r\n        this.setState(prevState => ({\r\n            currentLodge: {\r\n                ...prevState.currentLodge,\r\n               region: region\r\n            }\r\n        }));\r\n    }\r\n\r\n  getLodge(id) {\r\n    LodgeDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentLodge: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateLodge() {\r\n    LodgeDataService.update(\r\n      this.state.currentLodge.id,\r\n      this.state.currentLodge\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The lodge was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteLodge() {    \r\n    LodgeDataService.delete(this.state.currentLodge.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/lodges')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n    render() {\r\n        const { currentLodge } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {currentLodge ? (\r\n                    <div className=\"edit-form\">\r\n                        <h4>Unterkunft</h4>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">Name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"name\"\r\n                                    value={currentLodge.name}\r\n                                    onChange={this.onChangeName}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"nrOfBeds\">nrOfBeds</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    id=\"nrOfBeds\"\r\n                                    value={currentLodge.nrOfBeds}\r\n                                    onChange={this.onChangeNrOfBeds}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"nrOfPersons\">zugewiesene Personen</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    id=\"nrOfPersons\"\r\n                                    value={currentLodge.nrOfPersons}\r\n                                    onChange={this.onChangeNrOfPersons}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"FreeBeds\">Freie Betten</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    id=\"FreeBeds\"\r\n                                    value={currentLodge.freeBeds}\r\n                                    onChange={this.onChangeFreeBeds}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Type\">Art der Unterkunft</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"type\"\r\n                                    value={currentLodge.type}\r\n                                    onChange={this.onChangeType}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"Region\">Region</label>\r\n                                <select id=\"region\"\r\n                                    className=\"form-control\"\r\n                                    value={currentLodge.region}\r\n                                    onChange={this.onChangeRegion}\r\n                                  >\r\n                                    <option value=\"Wien\">Wien</option>\r\n                                    <option value=\"Niederösterreich\">Niederösterreich</option>\r\n                                    <option value=\"Burgenland\">Burgenland</option>\r\n                                    <option value=\"Oberösterreich\">Oberösterreich</option>\r\n                                    <option value=\"Salzburg\">Salzburg</option>\r\n                                    <option value=\"Steiermark\">Steiermark</option>\r\n                                    <option value=\"Kärnten\">Kärnten</option>\r\n                                    <option value=\"Tirol\">Tirol</option>\r\n                                    <option value=\"Vorarlberg\">Vorarlberg</option>\r\n                                </select>\r\n                            </div>\r\n                        </form>\r\n                                                              \r\n                        <button\r\n                            className=\"badge badge-danger mr-2\"\r\n                            onClick={() => {if (window.confirm(\"Sollen die Daten gelöscht werden\"))  this.deleteLodge()}}\r\n                        >\r\n                            L&ouml;schen\r\n                        </button>\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"badge badge-success\"\r\n                            onClick={this.updateLodge}\r\n                        >\r\n                            Update\r\n                        </button>\r\n                        <p>{this.state.message}</p>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <br />\r\n                        <p>Please click on a Lodge...</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import http from \"../http-common\";\r\n\r\n\r\n\r\nclass PeopleDataService {\r\n\r\n    getAll() {\r\n      \r\n    return http.get(\"/people\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/people/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/people\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/people/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/people/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/people`);\r\n  }\r\n\r\n  findByName(name) {\r\n    return http.get(`/people?name=${name}`);\r\n  }\r\n}\r\n\r\nexport default new PeopleDataService();","import React, { Component } from \"react\";\r\nimport PeopleDataService from \"../services/people.service\";\r\n\r\nexport default class Person extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n     this.onChangeAge = this.onChangeAge.bind(this);\r\n      this.onChangeAssignedLodge = this.onChangeAssignedLodge.bind(this);\r\n     \r\n    this.getPerson = this.getPerson.bind(this);\r\n    //this.updatePublished = this.updatePublished.bind(this);\r\n    this.updatePerson = this.updatePerson.bind(this);\r\n    this.deletePerson= this.deletePerson.bind(this);\r\n\r\n    this.state = {\r\n      currentPerson: {\r\n        id: null,\r\n        name: \"\",\r\n        age: null,\r\n        assignedLodge: \"\"\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPerson(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeName(e) {\r\n    const name = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentPerson: {\r\n          ...prevState.currentPerson,\r\n          name: name\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeAge(e) {\r\n    const age = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentPerson: {\r\n        ...prevState.currentPerson,\r\n        age: age\r\n      }\r\n    }));\r\n    }\r\n\r\n    \r\n    onChangeAssignedLodge(e) {\r\n        const assignedLodge = e.target.value;\r\n\r\n        this.setState(prevState => ({\r\n            currentAssignedLodge: {\r\n                ...prevState.currentAssignedLodge,\r\n                assignedLodge: assignedLodge\r\n            }\r\n        }));\r\n    }\r\n\r\n  getPerson(id) {\r\n    PeopleDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentPerson: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updatePerson() {\r\n    PeopleDataService.update(\r\n      this.state.currentPerson.id,\r\n      this.state.currentPerson\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The person was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deletePerson() {    \r\n    PeopleDataService.delete(this.state.currentPerson.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/people')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n    render() {\r\n        const { currentPerson } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {currentPerson ? (\r\n                    <div className=\"edit-form\">\r\n                        <h4>Person</h4>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">Name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"name\"\r\n                                    value={currentPerson.name}\r\n                                    onChange={this.onChangeName}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"age\">Alter</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    id=\"age\"\r\n                                    value={currentPerson.age}\r\n                                    onChange={this.onChangeAge}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"assignedLodge\">Zugewiesene Unterkunft</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    id=\"assignedLodge\"\r\n                                    value={currentPerson.assignedLodge}\r\n                                    onChange={this.onChangeAssignedLodge}\r\n                                />\r\n                            </div>\r\n                        </form>                                          \r\n                                                \r\n                        <button\r\n                            className=\"badge badge-danger mr-2\"\r\n                            onClick={() => {if (window.confirm(\"Sollen die Daten gelöscht werden\"))  this.deletePerson()}}\r\n                        >\r\n                            L&ouml;schen\r\n                        </button>\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"badge badge-success\"\r\n                            onClick={this.updatePerson}\r\n                        >\r\n                            Update\r\n                        </button>\r\n                        <p>{this.state.message}</p>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <br />\r\n                        <p>Please click on a Person...</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PeopleDataService from \"../services/people.service\";\r\nimport LodgeDataService from \"../services/lodge.service\";\r\nimport Lodge from \"./lodge.component\";\r\n\r\n\r\nexport default class AddPerson extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeAge = this.onChangeAge.bind(this);\r\n    this.onChangeAssignedLodge = this.onChangeAssignedLodge.bind(this);\r\n    this.retrieveLodges = this.retrieveLodges.bind(this);\r\n    this.savePerson = this.savePerson.bind(this);\r\n    this.newPerson = this.newPerson.bind(this);\r\n    this.state = {\r\n      id: null,\r\n      lodges: [],\r\n      name: \"\",\r\n      assignedLodge: \"\",\r\n      age: null,\r\n      submitted: false\r\n    };\r\n  }\r\n  componentDidMount() {\r\n   this.retrieveLodges();\r\n  }\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n  retrieveLodges() {\r\n    LodgeDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          lodges: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n  \r\n  onChangeAge(e) {\r\n    this.setState({\r\n      age: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeAssignedLodge(e) {\r\n    this.setState({\r\n      assignedLodge: e.target.value\r\n    });\r\n  \r\n   }\r\n\r\n  savePerson() {\r\n    var data = {\r\n      name: this.state.name,\r\n      age: this.state.age,\r\n      assignedLodge: this.state.assignedLodge\r\n\r\n    };\r\n\r\n    PeopleDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          age: response.data.age,\r\n          assignedLodge: response.data.assignedLodge,\r\n          submitted: true\r\n        });\r\n      })\r\n      .catch(e => {\r\n          console.log(e);\r\n\r\n      });\r\n  }\r\n  newPerson() {\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      age: null,\r\n      assignedLodge: \"\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const{lodges} = this.state;\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>Die Person wurde erfolgreich übermittelt!</h4>\r\n            <form method=\"get\" action=\"/\">\r\n              <button className= \"btn btn-success\" type=\"submit\">Zurück zur Übersicht</button>\r\n            </form>\r\n          </div>\r\n        ) : (\r\n          <div> \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Name der Person</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"age\">Alter</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"age\"\r\n                required\r\n                value={this.state.age}\r\n                onChange={this.onChangeAge}\r\n                name=\"age\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"assignedLodge\">Zugewiesene Unterkunft</label>\r\n              <select\r\n              className=\"form-control\"\r\n              id=\"assignedLodge\"\r\n              required\r\n              value={this.state.assignedLodge}\r\n              onChange={this.onChangeAssignedLodge}\r\n              name=\"assignedLodge\"\r\n              >\r\n              <option value=\"\">Unterkunft auswählen</option>\r\n              {lodges.map((lodge, key) => (\r\n              <option key={key} value={lodge.id}>\r\n              {lodge.name}\r\n            </option>\r\n          ))}\r\n              </select>\r\n            </div>\r\n           \r\n            <button onClick={this.savePerson} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport PersonDataService from \"../services/people.service\";\r\nimport { Link } from \"react-router-dom\";\r\n//import Lodge from \"./lodge.component\";\r\n\r\nexport default class PersonList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchPName = this.onChangeSearchPName.bind(this);\r\n    this.retrievePerson = this.retrievePerson.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActivePerson = this.setActivePerson.bind(this);\r\n    this.removeAllPerson = this.removeAllPerson.bind(this);\r\n    this.searchPName = this.searchPName.bind(this);\r\n\r\n    this.state = {\r\n      person: [],\r\n      currentPerson: null,\r\n      currentIndex: -1,\r\n      searchName: \"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.retrievePerson();\r\n  }\r\n\r\n  onChangeSearchPName(e) {\r\n    const searchName = e.target.value;\r\n\r\n    this.setState({\r\n      searchName: searchName\r\n    });\r\n  }\r\n\r\n  retrievePerson() {\r\n    PersonDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          person: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrievePerson();\r\n    this.setState({\r\n      currentPerson: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActivePerson(person, index) {\r\n    this.setState({\r\n      currentPerson: person,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  removeAllPerson() {\r\n    PersonDataService.deleteAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  searchPName() {\r\n    this.setState({\r\n      currentLodge: null,\r\n      currentIndex: -1\r\n    });\r\n\r\n    PersonDataService.findByName(this.state.searchName)\r\n      .then(response => {\r\n        this.setState({\r\n          person: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n      const { searchName, person, currentPerson, currentIndex } = this.state;\r\n\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Suche nach Name\"\r\n                value={searchName}\r\n                onChange={this.onChangeSearchPName}\r\n              />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.searchPName}\r\n              >\r\n                Suchen\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Personen</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {person &&\r\n              person.map((person, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActivePerson(person, index)}\r\n                  key={index}\r\n                >\r\n                  {person.name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            className=\"m-3 btn btn-sm btn-danger\"\r\n            onClick={() => {if (window.confirm(\"Sollen die Daten gelöscht werden?\"))  this.removeAllPerson()}}\r\n          >\r\n            Alle l&ouml;schen\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentPerson ? (\r\n            <div>\r\n              <h4>Person</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>Name:</strong>\r\n                </label>{\" \"}\r\n                   {currentPerson.name}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Alter:</strong>\r\n                </label>{\" \"}\r\n                {currentPerson.age}\r\n               </div>\r\n               <div>\r\n               <label>\r\n                <strong>Zugeordnete Unterkunft:</strong>\r\n                   </label>{\" \"}\r\n                  {currentPerson.assignedLodge}\r\n                 </div>\r\n                \r\n                \r\n              \r\n              <Link\r\n                to={\"/person/\" + currentPerson.id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Bearbeiten\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Klicken Sie auf eine Person...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport LodgeList from \"./components/lodge-list.component\";\r\nimport AddLodge from \"./components/add-lodge.component\";\r\nimport Lodge from \"./components/lodge.component\";\r\nimport Person from \"./components/person.component\";\r\nimport AddPerson from \"./components/add-person.component\";\r\nimport PersonList from \"./components/person-list.componten\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <Link to={\"/lodges\"} className=\"navbar-brand\">\r\n            UkraineLodgeService\r\n          </Link>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/lodges\"} className=\"nav-link\">\r\n                Unterk&uuml;nfte\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/addLodge\"} className=\"nav-link\">\r\n                Unterkunft anlegen\r\n               </Link>\r\n             </li>\r\n             <li className=\"nav-item\">\r\n              <Link to={\"/person\"} className=\"nav-link\">\r\n                Personen\r\n               </Link>\r\n            </li>\r\n             <li className=\"nav-item\">\r\n              <Link to={\"/addPerson\"} className=\"nav-link\">\r\n                Person anlegen\r\n               </Link>\r\n              </li>\r\n          </div>\r\n        </nav>\r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n           <Route exact path={[\"/\", \"/lodges\"]} component={LodgeList} />\r\n            <Route exact path=\"/addLodge\" component={AddLodge} />\r\n            <Route path=\"/lodges/:id\" component={Lodge} />\r\n            <Route path=\"/person/:id\" component={Person} />\r\n            <Route exact path=\"/addPerson\" component={AddPerson} />\r\n            <Route exact path=\"/person\" component={PersonList} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}